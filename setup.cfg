[pbr]
skip-authors = true
skip-changelog = true

[metadata]
url = https://github.com/grnet/bmcmanager.git
name = bmcmanager
author = Aggelos Kolaitis
author-email = akolaitis@admin.grnet.gr
description = BMCManager is a tool for bare-metal server management
description-file = README.md
description-content-type = text/markdown
requires-python = >= 3.5
classifiers =
    Intended Audience :: System Administrators
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.5
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    License :: OSI Approved :: GNU General Public License v3 (GPLv3)
    Operating System :: OS Independent

[files]
packages =
    bmcmanager

[entry_points]
console_scripts =
    bmcmanager = bmcmanager.cliff:main
    bmcm = bmcmanager.cliff:main
bmcmanager.dcim =
    netbox = bmcmanager.dcim.netbox:Netbox
    maas = bmcmanager.dcim.maas:MaaS
    local = bmcmanager.dcim.local:Local
bmcmanager.entrypoints =
    open_console = bmcmanager.commands.open:Console
    open_dcim = bmcmanager.commands.open:DCIM
    open_web = bmcmanager.commands.open:Web
    check_firmware = bmcmanager.commands.firmware:Check
    check_sensor = bmcmanager.commands.ipmi.sensor:Check
    check_disks = bmcmanager.commands.disks:Check
    check_ram = bmcmanager.commands.ram:Check
    disks_check = bmcmanager.commands.disks:Check
    disks_get = bmcmanager.commands.disks:Get
    firmware_get = bmcmanager.commands.firmware:Get
    firmware_refresh = bmcmanager.commands.firmware:Refresh
    firmware_check = bmcmanager.commands.firmware:Check
    firmware_latest_get = bmcmanager.commands.firmware:LatestGet
    firmware_latest_check = bmcmanager.commands.firmware:LatestCheck
    firmware_upgrade_rpc = bmcmanager.commands.firmware:UpgradeRPC
    firmware_upgrade_osput = bmcmanager.commands.firmware:UpgradeOsput
    ipmi_address_get = bmcmanager.commands.ipmi.address:Get
    ipmi_address_refresh = bmcmanager.commands.ipmi.address:Refresh
    ipmi_credentials_get = bmcmanager.commands.ipmi.credentials:Get
    ipmi_credentials_set = bmcmanager.commands.ipmi.credentials:Set
    ipmi_logs_clear = bmcmanager.commands.ipmi.logs:Clear
    ipmi_logs_get = bmcmanager.commands.ipmi.logs:Get
    ipmi_reset = bmcmanager.commands.ipmi.reset:Reset
    ipmi_sensor_check = bmcmanager.commands.ipmi.sensor:Check
    ipmi_sensor_get = bmcmanager.commands.ipmi.sensor:Get
    ipmi_ssh = bmcmanager.commands.ipmi.ssh:SSH
    ipmi_tool = bmcmanager.commands.ipmitool:Run
    lenovo_rpc_do = bmcmanager.commands.lenovo:Do
    lenovo_rpc_list = bmcmanager.commands.lenovo:List
    netbox_secret_list = bmcmanager.commands.netbox:ListSecrets
    netbox_secret_set = bmcmanager.commands.netbox:SetSecret
    power_cycle = bmcmanager.commands.power:PowerCycle
    power_off = bmcmanager.commands.power:PowerOff
    power_on = bmcmanager.commands.power:PowerOn
    power_reset = bmcmanager.commands.power:PowerReset
    power_status = bmcmanager.commands.power:PowerStatus
    power_switch_lock = bmcmanager.commands.power:LockSwitch
    power_switch_unlock = bmcmanager.commands.power:UnlockSwitch
    ram_check = bmcmanager.commands.ram:Check
    ram_get = bmcmanager.commands.ram:Get
    server_boot_local = bmcmanager.commands.server.boot:Local
    server_boot_pxe = bmcmanager.commands.server.boot:PXE
    server_status_get = bmcmanager.commands.server.status:Get
    server_status_storage = bmcmanager.commands.server.status:Storage
    server_status_controllers = bmcmanager.commands.server.status:Controllers
    server_status_pdisks = bmcmanager.commands.server.status:PDisks
    server_autoupdate_enable = bmcmanager.commands.server.autoupdate:Enable
    server_autoupdate_disable = bmcmanager.commands.server.autoupdate:Disable
    server_diagnostics = bmcmanager.commands.server.server:Diagnostics
    server_identify = bmcmanager.commands.server.server:Identify
    server_info_get = bmcmanager.commands.server.server:Info
    server_info_idrac = bmcmanager.commands.server.server:IdracInfo
    server_upgrade = bmcmanager.commands.server.server:Upgrade
    server_ssh = bmcmanager.commands.server.server:SSH
    server_jobs_flush = bmcmanager.commands.server.server:FlushJobs
    server_list = bmcmanager.commands.server.list:List
    server_factory_reset = bmcmanager.commands.server.server:FactoryReset

[bdist_wheel]
universal = 1

[tox:tox]
skipsdist = true
skip_install = true

[testenv]
usedevelop = true
deps =
    -rrequirements.txt
    -rtest-requirements.txt

[testenv:lint]
envdir = {toxworkdir}/shared
commands =
    flake8 {toxinidir}

[testenv:fmt]
envdir = {toxworkdir}/shared
commands =
    black {toxinidir}

[testenv:testfmt]
envdir = {toxworkdir}/shared
commands =
    black {toxinidir} --check

[testenv:testpackages]
envdir = {toxworkdir}/shared
commands =
    python setup.py clean
    python setup.py bdist_wheel sdist
    twine check dist/*

[testenv:testbinary]
usedevelop = true
envdir = {toxworkdir}/shared
commands =
    bmcmanager --help

[testenv:completer]
usedevelop = true
envdir = {toxworkdir}/shared
whitelist_externals = sh
commands =
    sh -c 'bmcmanager complete > scripts/bmcmanager-autocomplete.bash'

[testenv:publish]
usedevelop = true
envdir = {toxworkdir}/shared
commands =
    twine upload dist/* {posargs}

[flake8]
show-source = true
exclude = .tox,.git,venv,.venv,.eggs,build,dist
max-line-length = 99
ignore = E203,E722,W503
